/**
 * lapid - natural language generation and processing done right
 * @version v1.2.0
 * @link https://github.com/nnmrts/lapid
 * @license Unlicense
 */

"use strict";function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function _defineProperty(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var _createClass=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}(),_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},lapid=function(){var e={isObject:function(e){return e&&"object"===(void 0===e?"undefined":_typeof(e))&&!Array.isArray(e)},mergeDeep:function n(t,r){var i=Object.assign({},t);return e.isObject(t)&&e.isObject(r)&&Object.keys(r).forEach(function(l){e.isObject(r[l])&&l in t?i[l]=n(t[l],r[l]):Object.assign(i,_defineProperty({},l,r[l]))}),i}},n={};n.ngram={letter:n.letter},n.syllable={ngram:n.ngram},n.word={ngram:n.ngram},n.sentence={limit:7,limitType:"word",syllable:n.syllable,word:n.word},n.line={index:0,rhyme:null,limit:7,limitType:"syllable",syllable:n.syllable,word:n.word},n.text={sentence:n.sentence},n.lines={linesCount:4,rhyme:!1,scheme:{keep:!0,string:"aabb"},line:n.line};var t=function(){function e(n){_classCallCheck(this,e),this.string=n,this.scheme=n.split("")}return _createClass(e,null,[{key:"expand",value:function(e,n){if(n)for(var t=this.scheme.length-e,r=0;r<t;r++){var i=r;r+1>this.scheme.length&&(i=r-this.scheme.length),this.scheme.push(this.scheme[i])}}},{key:"shorten",value:function(e){this.scheme.splice(e)}}]),e}(),r={LANGUAGE:"de",generate:{Line:function(t){(t=e.mergeDeep(n.line,t)).rhyme?console.log("rhyme here"):console.log("no rhyme here")},Lines:function(r){var i;(r=e.mergeDeep(n.lines,r)).rhyme&&((i=new t(r.scheme.string)).scheme.length<r.linesCount?i.expand(r.linesCount,r.scheme.keep):i.scheme.length>r.linesCount&&i.shorten(r.linesCount)),this.text="";for(var l=0;l<r.linesCount;l++){var s=r.line;s.index=l,r.rhyme&&(s.rhyme=i.scheme[l]),this[l]=new lapid.generate.Line(s),this.text+=this[l].text+"\n"}}},process:{}};return window.lapid=r,r}();